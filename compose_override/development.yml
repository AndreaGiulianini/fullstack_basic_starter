volumes:
  pgdata: null
  wordpress: null
  mysqldata: null
services:
  app:
    develop:
      watch:
        - action: sync
          path: ./app
          target: /home/node/app
          ignore:
            - ./app/node_modules/
        - action: rebuild
          path: ./app/package.json
    volumes:
      - /home/node/app/node_modules
      - /home/node/app/.next
    restart: unless-stopped
    depends_on:
      - postgres_db
  api:
    develop:
      watch:
        - action: sync
          path: ./api
          target: /home/node/api
          ignore:
            - ./api/node_modules/
        - action: rebuild
          path: ./api/package.json
    volumes:
      - /home/node/api/node_modules
    restart: always
    depends_on:
      - postgres_db
  postgres_db:
    image: 'postgres:17'
    container_name: postgres_db
    environment:
      POSTGRES_USER: '${DB_USER}'
      POSTGRES_PASSWORD: '${DB_PASS}'
      POSTGRES_DB: '${DB_NAME}'
    ports:
      - '5432:5432'
    volumes:
      - 'pgdata:/var/lib/postgresql/data'
    networks:
      - web
  wordpress:
    image: wordpress
    container_name: wordpress
    restart: always
    labels:
      - traefik.enable=true
      - traefik.http.routers.wordpress.rule=Host(`wordpress.example.com`)
      - traefik.http.services.wordpress.loadbalancer.server.port=80
      - traefik.http.routers.wordpress.entrypoints=web
    ports:
      - '7000:80'
    env_file:
      - .env
    volumes:
      - 'wordpress:/var/www/html'
    networks:
      - web
    depends_on:
      - mysql_db
  mysql_db:
    image: 'mysql:8.0'
    container_name: mysql_db
    restart: always
    ports:
      - '3306:3306'
    env_file:
      - .env
    volumes:
      - 'mysqldata:/var/lib/mysql'
    networks:
      - web
